How did viewing a diff between two versions of a file help you see the bug that was introduced?

Because it did the hard work of finding out and highlighting only the lines which changed, without having to scan manually each line, thus saving time and concentration for better things.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Ability to see the code at a prior stage in case I want to branch out a new idea, or in case I messed up the existing code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

pros: you can decide when it makes sense to commit a logical chunk of code
cons: commits can be too small or to big, especially too big if we forget to commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because Git, being targeted to coders, understands the need for treating a group of modified files as a single logical change, whereas Google Docs assumes each document is self-sufficient

How can you use the commands git log and git diff to view the history of files?

git log   displays a summary of all the commits
git log --stat   gives an overview of the changes
git diff 1st commit 2nd commit   displays exactly what changed

How might using version control make you more confident to make changes that could break something?

I can always revert without having to rely on undos or backup copies

Now that you have your workspace set up, what do you want to try using Git for?

Android studio
